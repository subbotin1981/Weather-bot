import os
import requests
from datetime import datetime
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

def get_weather():
    """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è–º–∏"""
    CITY = 'Kyiv'
    OWM_API_KEY = os.environ.get('OWM_API_KEY')
    
    if not OWM_API_KEY:
        raise ValueError("OWM_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–æ–≥–æ–¥—É
        CURRENT_URL = f'https://api.openweathermap.org/data/2.5/weather?q={CITY}&appid={OWM_API_KEY}&units=metric&lang=ru'
        current_response = requests.get(CURRENT_URL, timeout=10)
        current_response.raise_for_status()
        current_data = current_response.json()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞
        if current_data.get('cod') != 200:
            raise Exception(f"–û—à–∏–±–∫–∞ API OpenWeatherMap: {current_data.get('message', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
        
        temp = current_data['main']['temp']
        desc = current_data['weather'][0]['description']
        feels_like = current_data['main']['feels_like']
        humidity = current_data['main']['humidity']
        pressure_hpa = current_data['main']['pressure']
        pressure_mmHg = round(pressure_hpa * 0.75006)
        wind_speed = current_data['wind']['speed']
        lat = current_data['coord']['lat']
        lon = current_data['coord']['lon']
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (UV-–∏–Ω–¥–µ–∫—Å)
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–æ–ª–µ–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π API
        ONECALL_URL = f'https://api.openweathermap.org/data/3.0/onecall?lat={lat}&lon={lon}&appid={OWM_API_KEY}&units=metric&lang=ru'
        try:
            uv_response = requests.get(ONECALL_URL, timeout=10)
            if uv_response.status_code == 200:
                uv_data = uv_response.json()
                uvi = uv_data.get('current', {}).get('uvi', 0)
            else:
                # Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π API –µ—Å–ª–∏ –Ω–æ–≤—ã–π –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω
                OLD_ONECALL_URL = f'https://api.openweathermap.org/data/2.5/onecall?lat={lat}&lon={lon}&appid={OWM_API_KEY}&units=metric'
                uv_response = requests.get(OLD_ONECALL_URL, timeout=10)
                uv_response.raise_for_status()
                uv_data = uv_response.json()
                uvi = uv_data.get('current', {}).get('uvi', 0)
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å UV-–∏–Ω–¥–µ–∫—Å: {e}")
            uvi = 0
        
        # –ê–Ω–∞–ª–∏–∑ —É–≥—Ä–æ–∑ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
        warnings = []
        tips = []
        
        # –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        if temp >= 30:
            warnings.append("üå° –ñ–∞—Ä–∫–æ! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤—ã—à–µ 30¬∞C")
            tips.append("üíß –ü–µ–π –±–æ–ª—å—à–µ –≤–æ–¥—ã, –∏–∑–±–µ–≥–∞–π –ø–µ—Ä–µ–≥—Ä–µ–≤–∞.")
        elif temp <= -10:
            warnings.append("ü•∂ –û—á–µ–Ω—å —Ö–æ–ª–æ–¥–Ω–æ! –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∏–∂–µ -10¬∞C")
            tips.append("üß• –û–¥–µ–≤–∞–π—Å—è —Ç–µ–ø–ª–µ–µ, –±–µ—Ä–µ–≥–∏—Å—å –æ–±–º–æ—Ä–æ–∂–µ–Ω–∏—è.")
        elif temp <= 0:
            warnings.append("‚ùÑÔ∏è –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –Ω–∏–∂–µ –Ω—É–ª—è")
            tips.append("‚ö†Ô∏è –û—Å—Ç–æ—Ä–æ–∂–Ω–æ, –≤–æ–∑–º–æ–∂–µ–Ω –≥–æ–ª–æ–ª—ë–¥.")
        
        # –í–µ—Ç—Ä–æ–≤—ã–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        if wind_speed >= 10:
            warnings.append(f"üí® –û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä: {wind_speed} –º/—Å")
            tips.append("‚ö†Ô∏è –ò–∑–±–µ–≥–∞–π –≤—ã—Å–æ–∫–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤, –±—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω –Ω–∞ —É–ª–∏—Ü–µ.")
        elif wind_speed >= 8:
            warnings.append(f"üí® –°–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä: {wind_speed} –º/—Å")
            tips.append("‚ö†Ô∏è –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω –Ω–∞ —É–ª–∏—Ü–µ –∏–∑-–∑–∞ –≤–µ—Ç—Ä–∞.")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç—É–º–∞–Ω –∏ –ø–ª–æ—Ö—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å
        fog_keywords = ['—Ç—É–º–∞–Ω', '–¥—ã–º–∫–∞', '—Å–º–æ–≥', '–º–≥–ª–∞']
        if any(word in desc.lower() for word in fog_keywords):
            warnings.append("üå´ –í–æ–∑–º–æ–∂–Ω–∞ –ø–ª–æ—Ö–∞—è –≤–∏–¥–∏–º–æ—Å—Ç—å (—Ç—É–º–∞–Ω –∏–ª–∏ —Å–º–æ–≥)")
            tips.append("üöó –ë—É–¥—å –æ—Å—Ç–æ—Ä–æ–∂–µ–Ω –ø—Ä–∏ –≤–æ–∂–¥–µ–Ω–∏–∏, –≤–∫–ª—é—á–∏ —Ñ–∞—Ä—ã.")
        
        # –ü—Ä–æ–≥–Ω–æ–∑ –æ—Å–∞–¥–∫–æ–≤ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —á–∞—Å—ã
        try:
            FORECAST_URL = f'https://api.openweathermap.org/data/2.5/forecast?q={CITY}&appid={OWM_API_KEY}&units=metric&lang=ru'
            forecast_response = requests.get(FORECAST_URL, timeout=10)
            forecast_response.raise_for_status()
            forecast_data = forecast_response.json()
            
            rain_keywords = ['–¥–æ–∂–¥', '–≥—Ä–æ–∑–∞', '—Å–Ω–µ–≥', '–ª–∏–≤–µ–Ω—å', '–≥—Ä–∞–¥']
            rain_forecast = ""
            
            for item in forecast_data['list'][:6]:  # –ë–ª–∏–∂–∞–π—à–∏–µ 18 —á–∞—Å–æ–≤
                weather_desc = item['weather'][0]['description'].lower()
                if any(word in weather_desc for word in rain_keywords):
                    time = item['dt_txt'].split(' ')[1][:5]
                    rain_forecast += f"‚Ä¢ {time}: {weather_desc.capitalize()}\n"
            
            if rain_forecast:
                warnings.append("‚òîÔ∏è –í–æ–∑–º–æ–∂–Ω—ã –æ—Å–∞–¥–∫–∏:\n" + rain_forecast.strip())
                tips.append("üåÇ –ó–∞—Ö–≤–∞—Ç–∏ –∑–æ–Ω—Ç –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π.")
                
        except Exception as e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –æ—Å–∞–¥–∫–æ–≤: {e}")
        
        # UV-–∏–Ω–¥–µ–∫—Å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
        if uvi >= 8:
            warnings.append(f"üîÜ –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∏–π UV-–∏–Ω–¥–µ–∫—Å: {uvi}")
            tips.append("üß¥ –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º SPF 30+!")
        elif uvi >= 6:
            warnings.append(f"üîÜ –í—ã—Å–æ–∫–∏–π UV-–∏–Ω–¥–µ–∫—Å: {uvi}")
            tips.append("üß¥ –ò—Å–ø–æ–ª—å–∑—É–π —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–π –∫—Ä–µ–º, –æ—Å–æ–±–µ–Ω–Ω–æ –¥–Ω—ë–º.")
        
        # –í–ª–∞–∂–Ω–æ—Å—Ç—å
        if humidity >= 80:
            warnings.append(f"üíß –û—á–µ–Ω—å –≤—ã—Å–æ–∫–∞—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%")
            tips.append("üòÆ‚Äçüí® –ú–æ–∂–µ—Ç –æ—â—É—â–∞—Ç—å—Å—è –¥—É—Ö–æ—Ç–∞, —á–∞—â–µ –ø—Ä–æ–≤–µ—Ç—Ä–∏–≤–∞–π –ø–æ–º–µ—â–µ–Ω–∏—è.")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –±–ª–æ–∫–∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–π –∏ —Å–æ–≤–µ—Ç–æ–≤
        warning_block = ""
        if warnings:
            warning_block = "\n‚ö†Ô∏è <b>–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:</b>\n" + "\n".join(warnings)
        
        tips_block = ""
        if tips:
            tips_block = "\nüí° <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã:</b>\n" + "\n".join(tips)
        
        # –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        current_time = datetime.now().strftime("%H:%M")
        
        return f"""üåç <b>–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! –ü–æ–≥–æ–¥–∞ –≤ –ö–∏–µ–≤–µ</b> ({current_time}):

üå° <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {round(temp)}¬∞C
üå§ <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> {desc.capitalize()}
üå° <b>–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫:</b> {round(feels_like)}¬∞C
üíß <b>–í–ª–∞–∂–Ω–æ—Å—Ç—å:</b> {humidity}%
üí® <b>–í–µ—Ç–µ—Ä:</b> {wind_speed} –º/—Å
üìà <b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> {pressure_mmHg} –º–º —Ä—Ç. —Å—Ç.
üîÜ <b>UV-–∏–Ω–¥–µ–∫—Å:</b> {uvi}
{warning_block}
{tips_block}

–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è! ‚òÄÔ∏è"""

    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}")
        raise
    except KeyError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –¥–∞–Ω–Ω—ã—Ö API: {e}")
        raise
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã: {e}")
        raise

def send_telegram_message(message):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram"""
    TELEGRAM_TOKEN = os.environ.get('TELEGRAM_TOKEN')
    CHAT_ID = os.environ.get('TELEGRAM_CHAT_ID')
    
    if not TELEGRAM_TOKEN or not CHAT_ID:
        raise ValueError("TELEGRAM_TOKEN –∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    
    url = f'https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage'
    payload = {
        'chat_id': CHAT_ID,
        'text': message,
        'parse_mode': 'HTML',
        'disable_web_page_preview': True
    }
    
    try:
        response = requests.post(url, data=payload, timeout=10)
        response.raise_for_status()
        result = response.json()
        
        if not result.get('ok'):
            raise Exception(f"Telegram API error: {result.get('description', 'Unknown error')}")
            
        logger.info("–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
        return result
        
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
        raise
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram: {e}")
        raise

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ...")
        weather_message = get_weather()
        
        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...")
        result = send_telegram_message(weather_message)
        
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –æ—Ç—Ä–∞–±–æ—Ç–∞–ª!")
        print("‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        
    except ValueError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
    except Exception as e:
        logger.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()
